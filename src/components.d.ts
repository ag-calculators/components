/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface AgcCard {
    'block': boolean;
    'noBorder': string;
  }
  interface AgcCardAttributes extends StencilHTMLAttributes {
    'block'?: boolean;
    'noBorder'?: string;
  }

  interface AgcCentered {
    'renderItemsFunc': () => void;
    'width': string;
  }
  interface AgcCenteredAttributes extends StencilHTMLAttributes {
    'renderItemsFunc'?: () => void;
    'width'?: string;
  }

  interface AgcCounterRow {}
  interface AgcCounterRowAttributes extends StencilHTMLAttributes {}

  interface AgcCounter {
    'counter': string;
    'icon': string;
    'label': string;
    'renderFunc': () => void;
    'sign': string;
    'size': string;
  }
  interface AgcCounterAttributes extends StencilHTMLAttributes {
    'counter'?: string;
    'icon'?: string;
    'label'?: string;
    'renderFunc'?: () => void;
    'sign'?: string;
    'size'?: string;
  }

  interface AgcDisclaimer {}
  interface AgcDisclaimerAttributes extends StencilHTMLAttributes {}

  interface AgcFlexStack {
    'height': string;
  }
  interface AgcFlexStackAttributes extends StencilHTMLAttributes {
    'height'?: string;
  }

  interface AgcFormFooter {
    'actions': any;
    'renderFeedbackFunc': () => void;
  }
  interface AgcFormFooterAttributes extends StencilHTMLAttributes {
    'actions'?: any;
    'renderFeedbackFunc'?: () => void;
  }

  interface AgcMultistep {
    'contentHeight': string;
    'enterTransition': string;
    'errorTransition': string;
    'leaveTransition': string;
    'name': string;
    'renderFunc': (values) => void;
    'steps': number;
    'stepsFunc': (currentStep, values) => any;
  }
  interface AgcMultistepAttributes extends StencilHTMLAttributes {
    'contentHeight'?: string;
    'enterTransition'?: string;
    'errorTransition'?: string;
    'leaveTransition'?: string;
    'name'?: string;
    'renderFunc'?: (values) => void;
    'steps'?: number;
    'stepsFunc'?: (currentStep, values) => any;
  }

  interface AgcRating {
    'eventId': string;
    'label': string;
    'ratedLabel': string;
    'steps': number;
  }
  interface AgcRatingAttributes extends StencilHTMLAttributes {
    'eventId'?: string;
    'label'?: string;
    'onRatingCompleted'?: (event: CustomEvent) => void;
    'ratedLabel'?: string;
    'steps'?: number;
  }

  interface AgcStepTransition {
    'name': string;
    'run': (transition: any) => void;
    'transition': string;
  }
  interface AgcStepTransitionAttributes extends StencilHTMLAttributes {
    'name'?: string;
    'transition'?: string;
  }

  interface AgcStep {
    'description': string;
    'heading': string;
    'isCurrent': boolean;
    'number': string;
  }
  interface AgcStepAttributes extends StencilHTMLAttributes {
    'description'?: string;
    'heading'?: string;
    'isCurrent'?: boolean;
    'number'?: string;
  }

  interface SimpleStep {}
  interface SimpleStepAttributes extends StencilHTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'AgcCard': Components.AgcCard;
    'AgcCentered': Components.AgcCentered;
    'AgcCounterRow': Components.AgcCounterRow;
    'AgcCounter': Components.AgcCounter;
    'AgcDisclaimer': Components.AgcDisclaimer;
    'AgcFlexStack': Components.AgcFlexStack;
    'AgcFormFooter': Components.AgcFormFooter;
    'AgcMultistep': Components.AgcMultistep;
    'AgcRating': Components.AgcRating;
    'AgcStepTransition': Components.AgcStepTransition;
    'AgcStep': Components.AgcStep;
    'SimpleStep': Components.SimpleStep;
  }

  interface StencilIntrinsicElements {
    'agc-card': Components.AgcCardAttributes;
    'agc-centered': Components.AgcCenteredAttributes;
    'agc-counter-row': Components.AgcCounterRowAttributes;
    'agc-counter': Components.AgcCounterAttributes;
    'agc-disclaimer': Components.AgcDisclaimerAttributes;
    'agc-flex-stack': Components.AgcFlexStackAttributes;
    'agc-form-footer': Components.AgcFormFooterAttributes;
    'agc-multistep': Components.AgcMultistepAttributes;
    'agc-rating': Components.AgcRatingAttributes;
    'agc-step-transition': Components.AgcStepTransitionAttributes;
    'agc-step': Components.AgcStepAttributes;
    'simple-step': Components.SimpleStepAttributes;
  }


  interface HTMLAgcCardElement extends Components.AgcCard, HTMLStencilElement {}
  var HTMLAgcCardElement: {
    prototype: HTMLAgcCardElement;
    new (): HTMLAgcCardElement;
  };

  interface HTMLAgcCenteredElement extends Components.AgcCentered, HTMLStencilElement {}
  var HTMLAgcCenteredElement: {
    prototype: HTMLAgcCenteredElement;
    new (): HTMLAgcCenteredElement;
  };

  interface HTMLAgcCounterRowElement extends Components.AgcCounterRow, HTMLStencilElement {}
  var HTMLAgcCounterRowElement: {
    prototype: HTMLAgcCounterRowElement;
    new (): HTMLAgcCounterRowElement;
  };

  interface HTMLAgcCounterElement extends Components.AgcCounter, HTMLStencilElement {}
  var HTMLAgcCounterElement: {
    prototype: HTMLAgcCounterElement;
    new (): HTMLAgcCounterElement;
  };

  interface HTMLAgcDisclaimerElement extends Components.AgcDisclaimer, HTMLStencilElement {}
  var HTMLAgcDisclaimerElement: {
    prototype: HTMLAgcDisclaimerElement;
    new (): HTMLAgcDisclaimerElement;
  };

  interface HTMLAgcFlexStackElement extends Components.AgcFlexStack, HTMLStencilElement {}
  var HTMLAgcFlexStackElement: {
    prototype: HTMLAgcFlexStackElement;
    new (): HTMLAgcFlexStackElement;
  };

  interface HTMLAgcFormFooterElement extends Components.AgcFormFooter, HTMLStencilElement {}
  var HTMLAgcFormFooterElement: {
    prototype: HTMLAgcFormFooterElement;
    new (): HTMLAgcFormFooterElement;
  };

  interface HTMLAgcMultistepElement extends Components.AgcMultistep, HTMLStencilElement {}
  var HTMLAgcMultistepElement: {
    prototype: HTMLAgcMultistepElement;
    new (): HTMLAgcMultistepElement;
  };

  interface HTMLAgcRatingElement extends Components.AgcRating, HTMLStencilElement {}
  var HTMLAgcRatingElement: {
    prototype: HTMLAgcRatingElement;
    new (): HTMLAgcRatingElement;
  };

  interface HTMLAgcStepTransitionElement extends Components.AgcStepTransition, HTMLStencilElement {}
  var HTMLAgcStepTransitionElement: {
    prototype: HTMLAgcStepTransitionElement;
    new (): HTMLAgcStepTransitionElement;
  };

  interface HTMLAgcStepElement extends Components.AgcStep, HTMLStencilElement {}
  var HTMLAgcStepElement: {
    prototype: HTMLAgcStepElement;
    new (): HTMLAgcStepElement;
  };

  interface HTMLSimpleStepElement extends Components.SimpleStep, HTMLStencilElement {}
  var HTMLSimpleStepElement: {
    prototype: HTMLSimpleStepElement;
    new (): HTMLSimpleStepElement;
  };

  interface HTMLElementTagNameMap {
    'agc-card': HTMLAgcCardElement
    'agc-centered': HTMLAgcCenteredElement
    'agc-counter-row': HTMLAgcCounterRowElement
    'agc-counter': HTMLAgcCounterElement
    'agc-disclaimer': HTMLAgcDisclaimerElement
    'agc-flex-stack': HTMLAgcFlexStackElement
    'agc-form-footer': HTMLAgcFormFooterElement
    'agc-multistep': HTMLAgcMultistepElement
    'agc-rating': HTMLAgcRatingElement
    'agc-step-transition': HTMLAgcStepTransitionElement
    'agc-step': HTMLAgcStepElement
    'simple-step': HTMLSimpleStepElement
  }

  interface ElementTagNameMap {
    'agc-card': HTMLAgcCardElement;
    'agc-centered': HTMLAgcCenteredElement;
    'agc-counter-row': HTMLAgcCounterRowElement;
    'agc-counter': HTMLAgcCounterElement;
    'agc-disclaimer': HTMLAgcDisclaimerElement;
    'agc-flex-stack': HTMLAgcFlexStackElement;
    'agc-form-footer': HTMLAgcFormFooterElement;
    'agc-multistep': HTMLAgcMultistepElement;
    'agc-rating': HTMLAgcRatingElement;
    'agc-step-transition': HTMLAgcStepTransitionElement;
    'agc-step': HTMLAgcStepElement;
    'simple-step': HTMLSimpleStepElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
